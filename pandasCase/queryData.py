"""
    @author kingfish
    用datafram查询数据的几种方法
    1.按数值进行查询数据
    2.按值列表进行查询数据
    3.按数值区间进行查询数据
    4.按条件表达式进行查询数据
    5.调用函数进行查询数据
"""

import pandas as pd

data = pd.read_csv('datas/beijing_tianqi/beijing_tianqi_2018.csv');

#打印前几行数据
print('----------------------------打印前几行数据-----------------------------------')
print(data.head())
#设定日期列为索引，方便用日期进行筛选
data.set_index('ymd',inplace=True)
#查看一下索引
print('----------------------------查看一下索引----------------------------------')
print(data.index)
#设置新的索引后，重新查看一下前几行
print('----------------------------设置新的索引后，重新查看一下前几行----------------------------------')
print(data.head())
#处理一下数据，替换掉温度的后缀℃，方便后续温度列数据的计算 
data.loc[:,'bWendu'] = data['bWendu'].str.replace('℃','').astype('int32')
data.loc[:,'yWendu'] = data['yWendu'].str.replace('℃','').astype('int32')
#打印一下dataframe的数据类型
print('----------------------------打印一下dataframe的数据类型----------------------------------')
print(data.dtypes)
#打印前几行数据
print('----------------------------打印前几行数据----------------------------------')
print(data.head)

"""
按数值进行查询数据
"""
#查询某一天的最高温度
result = data.loc['2018-01-03',['bWendu']]
print('----------------------------查询某一天的最高温度----------------------------------')
print(result)
#查询某一天的最高和最低温度
result = data.loc['2018-01-03',['bWendu','yWendu']]
print('----------------------------查询某一天的最高和最低温度----------------------------------')
print(result)

"""
    按值列表进行查询数据
"""
#查询三天的最高温度
result = data.loc[['2018-01-03','2018-01-04','2018-01-05'],'bWendu']
print('----------------------------查询三天的最高温度----------------------------------')
print(result)
#查询三天的最高和最低温度
result = data.loc[['2018-01-03','2018-01-07','2018-01-08'],['bWendu','yWendu']]
print('----------------------------查询三天的最高和最低温度----------------------------------')
print(result)

"""
    按数值区间进行查询数据
"""
#行按区间查询
result = data.loc['2018-01-01':'2018-01-05','bWendu']
print('----------------------------行按区间查询----------------------------------')
print(result)
#列按区间查询
result = data.loc['2018-01-01':'2018-01-05','bWendu':'aqiInfo']
print('----------------------------列按区间查询----------------------------------')
print(result)

"""
    按条件表达式进行查询数据
"""
#查询最低温度低于-10度的列表
result = data.loc[data['yWendu']<-10,:]
print('----------------------------查询最低温度低于-10度的列表----------------------------------')
print(result)
#查询最高温度小于30度，并且最低温度大于15度，并且是晴天，并且天气为优的数据
result = data.loc[(data['bWendu']<30) & (data['yWendu']>15) & (data['tianqi'] =='晴') & (data['aqiInfo'] =='优'),:]
print('----------------------------查询最高温度小于30度，并且最低温度大于15度，并且是晴天，并且天气为优的数据----------------------------------')
print(result)
#用lambda函数查询温度小于30度，并且最低温度大于15度的数据
result = data.loc[lambda func:(data['bWendu']<30) & (data['yWendu']>15),:]
print('----------------------------用lambda函数查询温度小于30度，并且最低温度大于15度的数据----------------------------------')
print(result)

"""
    调用函数进行查询数据
"""

#编写自己的函数查询9月份空气质量好的数据
def query_my_data(data):
    return data.index.str.startswith('2018-09') & data['aqiLevel'] == 1

result = data.loc[query_my_data,:]
print('----------------------------编写自己的函数查询9月份空气质量好的数据----------------------------------')
print(result)

